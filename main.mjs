import http from 'http';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));
const AUDIO_DIR = path.join(__dirname, 'audio');
const PORT = 8000;

// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤
function getAudioFiles() {
  try {
    return fs.readdirSync(AUDIO_DIR)
      .filter(file => {
        const ext = path.extname(file).toLowerCase();
        return ['.mp3', '.wav', '.ogg'].includes(ext);
      })
      .map(file => path.join(AUDIO_DIR, file));
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ø–∞–ø–∫–∏ audio:', err);
    return [];
  }
}

// –°–æ–∑–¥–∞—ë–º —Å–µ—Ä–≤–µ—Ä
const server = http.createServer((req, res) => {
  const url = req.url;

  // === 1. –û–±—Å–ª—É–∂–∏–≤–∞–µ–º .pls –ø–ª–µ–π–ª–∏—Å—Ç ===
  if (req.url === '/radio.pls') {
    const plsContent = `[playlist]
NumberOfEntries=1
File1=http://–≤–∞—à-IP:${PORT}/stream.mp3
Title1=Highrise Radio
Length1=-1
Version=2
`;

    res.writeHead(200, { 'Content-Type': 'audio/x-scpls' });
    res.end(plsContent);
    return;
  }

  // === 2. –û–±—Å–ª—É–∂–∏–≤–∞–µ–º –∞—É–¥–∏–æ–ø–æ—Ç–æ–∫ ===
  if (req.url === '/stream.mp3') {
    console.log('[–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ] –ö–ª–∏–µ–Ω—Ç –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ —Ä–∞–¥–∏–æ');

    const files = getAudioFiles();
    if (files.length === 0) {
      res.writeHead(500, { 'Content-Type': 'text/plain' });
      res.end('–ù–µ—Ç –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ "audio"');
      console.error('‚ùå –ù–µ—Ç –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤!');
      return;
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Ä–∞–¥–∏–æ-—Å—Ç—Ä–∏–º–∞ (ICY)
    res.writeHead(200, {
      'Content-Type': 'audio/mpeg',
      'Transfer-Encoding': 'chunked',
      'Cache-Control': 'no-cache',
      'Connection': 'keep-alive',
      'icy-name': 'Highrise Radio',
      'icy-genre': 'Music',
      'icy-description': '–ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Å—Ç—Ä–∏–º –¥–ª—è Highrise',
      'icy-url': `http://–≤–∞—à-IP:${PORT}`,
      'icy-pub': '1',
    });

    let index = 0;

    function sendNextFile() {
      const filePath = files[index];
      const fileName = path.basename(filePath, path.extname(filePath));

      console.log(`üéµ –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É: ${fileName}`);

      const readStream = fs.createReadStream(filePath);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –∫–ª–∏–µ–Ω—Ç—É
      readStream.pipe(res, { end: false });

      readStream.on('end', () => {
        index = (index + 1) % files.length;
        console.log(`‚úÖ –§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –°–ª–µ–¥—É—é—â–∏–π: ${path.basename(files[index])}`);
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–∞—É–∑—É –º–µ–∂–¥—É —Ç—Ä–µ–∫–∞–º–∏
        setTimeout(sendNextFile, 100); // 100–º—Å –ø–∞—É–∑–∞
      });

      readStream.on('error', (err) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', err);
        if (!res.finished) res.end();
      });
    }

    // –ù–∞—á–∏–Ω–∞–µ–º —Å—Ç—Ä–∏–º
    sendNextFile();

    req.on('close', () => {
      console.log('üéß –ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è');
    });

    return;
  }

  // === 3. –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏) ===
  res.writeHead(200, { 'Content-Type': 'text/html' });
  res.end(`
    <h1>üéß Highrise Radio</h1>
    <p>–ü–æ–¥–∫–ª—é—á–∏ –≤ Highrise:</p>
    <code>http://–≤–∞—à-IP:${PORT}/radio.pls</code>
    <br><br>
    <audio controls autoplay>
      <source src="/stream.mp3" type="audio/mpeg">
      –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞—É–¥–∏–æ.
    </audio>
    <br>
    <a href="/radio.pls">–°–∫–∞—á–∞—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç (.pls)</a>
  `);
});

server.listen(PORT, '0.0.0.0', () => {
  console.log(`
üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: http://localhost:${PORT}
üéß –ü–æ–¥–∫–ª—é—á–∏ –≤ Highrise:
   –í–∞—Ä–∏–∞–Ω—Ç 1 (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è): http://–≤–∞—à-IP:${PORT}/radio.pls
   –í–∞—Ä–∏–∞–Ω—Ç 2: http://–≤–∞—à-IP:${PORT}/stream.mp3

üìÅ –ê—É–¥–∏–æ—Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏: ${AUDIO_DIR}
‚ùó –ó–∞–º–µ–Ω–∏ "–≤–∞—à-IP" –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π IP-–∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞!
`);
});